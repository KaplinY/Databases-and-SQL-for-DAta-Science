Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

SELECT COUNT (*)
FROM "Table_Name"

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

SELECT COUNT (DISTINCT(id))
FROM "Table_Name"

i. Business = 10000 
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

	SELECT *
	FROM user
	WHERE "column_name" IS Null
	--Checked all columns one by one

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	SELECT MIN("Column_Name")	
	FROM "Table_Name"

	SELECT MAX("Column_Name")
	FROM "Table_Name"

	SELECT AVG("Column_Name")
	FROM "Table_Name"

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT city, SUM(review_count) AS review
	FROM business
	GROUP BY city
	ORDER BY review DESC

	Copy and Paste the Result Below:
	city            | review |
+-----------------+--------+
| Las Vegas       |  82854 |
| Phoenix         |  34503 |
| Toronto         |  24113 |
| Scottsdale      |  20614 |
| Charlotte       |  12523 |
| Henderson       |  10871 |
| Tempe           |  10504 |
| Pittsburgh      |   9798 |
| Montréal        |   9448 |
| Chandler        |   8112 |
| Mesa            |   6875 |
| Gilbert         |   6380 |
| Cleveland       |   5593 |
| Madison         |   5265 |
| Glendale        |   4406 |
| Mississauga     |   3814 |
| Edinburgh       |   2792 |
| Peoria          |   2624 |
| North Las Vegas |   2438 |
| Markham         |   2352 |
| Champaign       |   2029 |
| Stuttgart       |   1849 |
| Surprise        |   1520 |
| Lakewood        |   1465 |
| Goodyear        |   1155 |

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS review
FROM business
WHERE city == 'Avon'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

stars | review |
+-------+--------+
|   1.5 |     10 |
|   2.5 |      6 |
|   3.5 |     88 |
|   4.0 |     21 |
|   4.5 |     31 |
|   5.0 |      3 

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS review
FROM business
WHERE city == 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
stars | review |
+-------+--------+
|   2.0 |      8 |
|   2.5 |      3 |
|   3.0 |     11 |
|   3.5 |      6 |
|   4.0 |     69 |
|   4.5 |     17 |
|   5.0 |     23 

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT name, review_count
	FROM user
	ORDER BY review_count DESC
	LIMIT 3
		
	Copy and Paste the Result Below:

	name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+	


8. Does posing more reviews correlate with more fans?

	SELECT name, review_count, fans
	FROM user
	ORDER BY review_count DESC

	Please explain your findings and interpretation of the results:
	name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |

	No, we can see from the table that for example Mimi with 968 reviews has 497 fans,
	when Gerald with 2000 reviews has only 253 fans.

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	For the word "love": 1780 total rows
	For the word "hate": 232 total rows

	There are more reviews with the word "love"

	SQL code used to arrive at answer:

	SELECT text
	FROM review
	WHERE text like "%love%"

	SELECT text
	FROM review
	WHERE text like "%hate%"
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT name, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10

	Copy and Paste the Result Below:

	+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

No, it seems like there is no correlation between hours distribution and business start rating.

ii. Do the two groups you chose to analyze have a different number of reviews?
         
Group with 4-5 stars review has more reviews in total, but some businesses from the first group have more reviews than businesses from the second group.

iii. Are you able to infer anything from the location data provided between these two groups? Explain.

I chose Toronto and category: restaurants, and it seems like restaurants which are located in the downtown have worse reviews than restaurants which are located further
from the downtown.

SQL code used for analysis:

SELECT B.name, B.review_count, H.hours, neighborhood,
		CASE
			WHEN B.stars BETWEEN 2 AND 3 THEN 'group 1'
			WHEN B.stars BETWEEN 4 AND 5 THEN 'group 2'
		    END AS star_rating
FROM business B INNER JOIN hours H ON B.id = H.business_id
INNER JOIN category C ON C.business_id = B.id
WHERE (B.city == 'Toronto' AND C.category LIKE 'Restaurants')
	AND (B.stars BETWEEN 2 AND 3 OR B.stars BETWEEN 4 AND 5)
ORDER BY review_count DESC

		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
	I have compared restaurants in Toronto and found out that the closed ones are located only in downtown or close to it, when all the restaurants in suburbs are open.
         
ii. Difference 2:
    Closed restaurants in Toronto all had less than 10 reviews, when some of the restaurants still running has more than 50 reviews.
         
         
SQL code used for analysis:

SELECT review_count, neighborhood, stars, B.name, B.is_open, C.category
FROM business B INNER JOIN category C ON B.id = C.business_id
WHERE city == 'Toronto' AND category LIKE 'Restaurants'
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

	  I am going to examine businesses in three north american cities: 1) which city has more open businesses in this data base, 2) what is the average
	  rating of closed and and still operational restaurants and 3) is there a difference between average ratings in different cities.   
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

I will need city names, star rating and to know if business is open or not.                         
                  
iii. Output of your finished dataset:
1)
+------------+-----------------+
| city       | open_businesses |
+------------+-----------------+
| Pittsburgh |             295 |
| Toronto    |             788 |
| Las Vegas  |            1311 |
+------------+-----------------+

2)
+---------+---------------+
| is_open |  AVG(B.stars) |
+---------+---------------+
|       0 | 3.48712871287 |
|       1 | 3.72472848789 |
+---------+---------------+
3)
+---------------+------------+
| average_stars | city       |
+---------------+------------+
| 3.74311338885 | Las Vegas  |
| 3.80311614731 | Pittsburgh |
| 3.54568527919 | Toronto    |
+---------------+------------+
         
iv. Provide the SQL code you used to create your final dataset:

1) SELECT B.city, SUM(B.is_open) AS open_businesses
FROM business B
WHERE B.city == 'Pittsburgh' OR B.city == 'Toronto' OR B.city == 'Las Vegas'
GROUP BY city
ORDER BY open_businesses

2) SELECT B.is_open, AVG(B.stars)
FROM business B
WHERE B.city == 'Pittsburgh' OR B.city == 'Toronto' OR B.city == 'Las Vegas'
GROUP BY is_open

3) SELECT AVG(B.stars) AS average_stars, city
FROM business B
WHERE city == 'Pittsburgh' OR city == 'Toronto' OR city == 'Las Vegas'
GROUP BY city


